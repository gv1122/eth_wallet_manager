{"version":3,"file":"index.esm.js","sources":["../src/chain.model.ts","../src/user.model.ts","../src/transaction.model.ts","../src/wallet.model.ts","../src/action.model.ts"],"sourcesContent":["import { Schema, model } from 'mongoose';\n\nexport const chainSchema = new Schema({\n    chainId: { type: String, required: true, index: true },\n    chainName: { type: String, required: true },\n    chainSymbol: { type: String, required: true },\n    chainLogo: { type: String, required: true },\n    chainPrice: { type: Number, required: true },\n    active: { type: Boolean, required: true, default: false },\n});\n\nexport const ChainModel = model('Chain', chainSchema);\nexport type ChainType = {\n  chainId: string;\n  chainName: string;\n  chainSymbol: string;\n  chainLogo: string;\n  chainPrice: number;\n  active: boolean;\n}\n","import { Schema, model } from 'mongoose';\n\nexport const userSchema = new Schema({\n  userId: { type: Number, required: true, index: true },\n  username: { type: String },\n  primaryWalletAddress: { type: String },\n  syblWalletsClaimed: { type: Number, default: 0, required: true },\n  referralCode: { type: String },\n  referredBy: { type: String },\n  referralCount: { type: Number },\n  fundWalletAddress: { type: String },\n  fundWalletPrivateKey: { type: String },\n  accessToken: { type: String },\n  paymentNonce: { type: String },\n  tokensRedeemed: { type: Number, default: 0, required: true },\n});\n\nexport const SybullUserModel = model('users', userSchema);\nexport type SybullUserType = {\n    userId: number;\n    username: string;\n    primaryWalletAddress: string;\n    syblWalletsClaimed: number;\n    referralCode?: string;\n    referredBy?: string;\n    referralCount?: number;\n    fundWalletAddress?: string;\n    fundWalletPrivateKey?: string;\n    accessToken?: string;\n    paymentNonce?: string;\n    tokensRedeemed?: number;\n}\n","import { Schema, model } from 'mongoose';\n\nexport const transactionSchema = new Schema({\n    userId: { type: Number, required: true, index: true },\n    walletAddress: { type: String, required: true, index: true },\n    transactionId: { type: String, index: true },\n    privateKey: { type: String, required: false },\n    chainId: { type: String, required: true },\n    chainName: { type: String, required: true },\n    actionId: { type: String, required: true },\n    actionName: { type: String, required: true },\n    transactionHash: { type: String, required: true },\n    transactionType: { type: String, required: false },\n    transactionReceipt: { type: Object, required: false },\n    explorerLink: { type: String, required: true },\n    createdTime: { type: Date, required: true, default: Date.now },\n    startTime: { type: Date, required: true, default: Date.now },\n    completedTime: { type: Date, required: false },\n    config: { type: Object, required: false, default: {} },\n});\n\nexport const TransactionModel = model('transactions', transactionSchema);\nexport type TransactionType = {\n    userId: number;\n    walletAddress: string;\n    privateKey: string;\n    transactionId: string;\n    chainId: string;\n    chainName: string;\n    actionId: string;\n    actionName: string;\n    transactionHash: string;\n    transactionType: string;\n    transactionReceipt: object;\n    explorerLink: string;\n    createdTime: Date;\n    startTime: Date;\n    completedTime?: Date;\n    config: any;\n}","import { Schema, model } from 'mongoose';\n\nexport const walletSchema = new Schema({\n    userId: { type: Number, required: true, index: true },\n    walletAddress: { type: String, required: true, index: true },\n    walletName: { type: String, required: true },\n    privateKey: { type: String, required: true },\n    chainId: { type: String, required: true },\n    chainName: { type: String, required: true },\n    activated: { type: Boolean, required: true, default: false },\n    farmingPaused: { type: Boolean, required: true, default: false },\n    fundingAllocation: { type: Object, required: true, default: {} },\n    isActivated: { type: Boolean, required: true, default: false },\n    automationSchedulingEnd: { type: Date, required: true, default: Date.now },\n    activationTokenBalance: { type: Number, required: true, default: 0 },\n});\n\nexport const SybullWalletModel = model('wallets', walletSchema);\nexport type SybullWalletType = {\n  userId: number;\n  walletAddress: string;\n  walletName: string;\n  privateKey: string;\n  chainId: string;\n  chainName: string;\n  farmingPaused: boolean;\n  fundingAllocation: object;\n  isActivated: boolean;\n  activationTokenBalance: number;\n  automationSchedulingEnd: Date;\n  automationTargetPlatforms: string[];\n}","import { Schema, model } from 'mongoose';\n// import type { SupportedActions, SupportedChains } from '@lukeevo/sybull-types';\n\nexport const actionSchema = new Schema({\n    chainId: { type: String, required: true, index: true },\n    chainName: { type: String, required: true },\n    actionId: { type: String, required: true },\n    actionName: { type: String, required: true },\n    description: { type: String, required: true },\n    active: { type: Boolean, required: true, default: false },\n    args: { type: Object, required: true }\n});\n\nexport const ActionModel = model('Action', actionSchema);\nexport type ActionType = {\n    chainId: string;\n    chainName: string;\n    actionId: string;\n    actionName: string;\n    description: string;\n    active: boolean;\n    args: object;\n}\n"],"names":["chainSchema","Schema","chainId","type","String","required","index","chainName","chainSymbol","chainLogo","chainPrice","Number","active","Boolean","default","ChainModel","model","userSchema","userId","username","primaryWalletAddress","syblWalletsClaimed","referralCode","referredBy","referralCount","fundWalletAddress","fundWalletPrivateKey","accessToken","paymentNonce","tokensRedeemed","SybullUserModel","transactionSchema","walletAddress","transactionId","privateKey","actionId","actionName","transactionHash","transactionType","transactionReceipt","Object","explorerLink","createdTime","Date","now","startTime","completedTime","config","TransactionModel","walletSchema","walletName","activated","farmingPaused","fundingAllocation","isActivated","automationSchedulingEnd","activationTokenBalance","SybullWalletModel","actionSchema","description","args","ActionModel"],"mappings":"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"}